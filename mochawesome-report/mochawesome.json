{
  "stats": {
    "suites": 4,
    "tests": 9,
    "passes": 9,
    "pending": 0,
    "failures": 0,
    "start": "2019-02-21T13:38:28.641Z",
    "end": "2019-02-21T13:38:36.020Z",
    "duration": 7379,
    "testsRegistered": 9,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "09daf858-cf9c-4f09-9d48-51d602c79455",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "6f0bab37-e4f1-49a2-834e-3e96f03ecc27",
        "title": "Mocha is a test framework and chai is the assertion library",
        "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
        "file": "\\src\\test\\main-test-engine.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook: Launching the home page",
            "fullTitle": "Mocha is a test framework and chai is the assertion library \"before all\" hook: Launching the home page",
            "timedOut": false,
            "duration": 5144,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "6eef8147-9864-4e6a-9877-f9a866b4daed",
            "isHook": true,
            "skipped": false
          },
          {
            "title": "\"before all\" hook: Verifying the homepage title",
            "fullTitle": "Mocha is a test framework and chai is the assertion library \"before all\" hook: Verifying the homepage title",
            "timedOut": false,
            "duration": 7,
            "pass": false,
            "fail": false,
            "pending": false,
            "context": "\"simple string\"",
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "1d2ca967-4eb4-4be7-a53c-19302f7f07aa",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after each\" hook",
            "fullTitle": "Mocha is a test framework and chai is the assertion library \"after each\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "console.log(\"after all tests\");",
            "err": {},
            "isRoot": false,
            "uuid": "c80dd4f9-1416-4d60-b4a3-be6876582719",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [],
        "suites": [
          {
            "uuid": "796995c0-0de0-44ef-872e-8faa18b07eb1",
            "title": "Test Suite Two",
            "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
            "file": "\\src\\test\\main-test-engine.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Navigating to the Sample DemoPage",
                "fullTitle": "Mocha is a test framework and chai is the assertion library Test Suite Two Navigating to the Sample DemoPage",
                "timedOut": false,
                "duration": 494,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "dd7a12f3-8bde-4be4-8781-14cee3ddb86b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Enter the text in enter-message field and verify the message",
                "fullTitle": "Mocha is a test framework and chai is the assertion library Test Suite Two Enter the text in enter-message field and verify the message",
                "timedOut": false,
                "duration": 229,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "87191823-b609-4884-9e6b-7d9fcabaca23",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Enter the two numbers to get the toatl and verify",
                "fullTitle": "Mocha is a test framework and chai is the assertion library Test Suite Two Enter the two numbers to get the toatl and verify",
                "timedOut": false,
                "duration": 254,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "a4ea3b1b-e10d-4cce-8b4c-5e1c0fb9c281",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "dd7a12f3-8bde-4be4-8781-14cee3ddb86b",
              "87191823-b609-4884-9e6b-7d9fcabaca23",
              "a4ea3b1b-e10d-4cce-8b4c-5e1c0fb9c281"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 977,
            "root": false,
            "rootEmpty": false,
            "_timeout": 100000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 100000
      },
      {
        "uuid": "0f954d31-ae6d-4bcb-8f50-f75b7196d783",
        "title": "Test Suite One",
        "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
        "file": "\\src\\test\\main-test-engine.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Navigating to checkboc demo Page",
            "fullTitle": "Test Suite One Navigating to checkboc demo Page",
            "timedOut": false,
            "duration": 358,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "0588e8bb-352a-47cb-8eec-2d1d4716adc3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "click on the check box and verify the message",
            "fullTitle": "Test Suite One click on the check box and verify the message",
            "timedOut": false,
            "duration": 90,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "b54ab067-b7d7-438c-92c3-2e3db7f7073b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "click on the checkall button and verify all the checkboxes are selected",
            "fullTitle": "Test Suite One click on the checkall button and verify all the checkboxes are selected",
            "timedOut": false,
            "duration": 172,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "3df43f44-85ca-4529-8b38-97e53d8204bf",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "click on the uncheckall button and verify all the checkboxes are unselected",
            "fullTitle": "Test Suite One click on the uncheckall button and verify all the checkboxes are unselected",
            "timedOut": false,
            "duration": 103,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "fef118d3-81e6-48a9-871a-897097aaad94",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "0588e8bb-352a-47cb-8eec-2d1d4716adc3",
          "b54ab067-b7d7-438c-92c3-2e3db7f7073b",
          "3df43f44-85ca-4529-8b38-97e53d8204bf",
          "fef118d3-81e6-48a9-871a-897097aaad94"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 723,
        "root": false,
        "rootEmpty": false,
        "_timeout": 100000
      },
      {
        "uuid": "00a475ce-26a1-4dc7-ae9a-02a28ccf32e1",
        "title": "Test Suite One",
        "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
        "file": "\\src\\test\\main-test-engine.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Navigating to radio button demo Page",
            "fullTitle": "Test Suite One Navigating to radio button demo Page",
            "timedOut": false,
            "duration": 331,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "45b3832e-35c6-4fea-9084-1d7eec99fe1d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "click on the check box and verify the message",
            "fullTitle": "Test Suite One click on the check box and verify the message",
            "timedOut": false,
            "duration": 146,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "98b3d1bf-7f54-4a64-aee8-b61602307d72",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "45b3832e-35c6-4fea-9084-1d7eec99fe1d",
          "98b3d1bf-7f54-4a64-aee8-b61602307d72"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 477,
        "root": false,
        "rootEmpty": false,
        "_timeout": 100000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 100000
  },
  "copyrightYear": 2019
}