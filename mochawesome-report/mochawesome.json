{
  "stats": {
    "suites": 8,
    "tests": 39,
    "passes": 37,
    "pending": 0,
    "failures": 2,
    "start": "2019-03-13T05:01:46.743Z",
    "end": "2019-03-13T05:02:27.960Z",
    "duration": 41217,
    "testsRegistered": 39,
    "passPercent": 94.9,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "6b76dd9d-4b4c-4e61-8a83-2f1dbd528884",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "c21131a1-cecc-4bfc-be9f-ff29f772ab6f",
        "title": "Mocha is a test framework and chai is the assertion library",
        "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
        "file": "\\src\\test\\main-test-engine.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook: Launching the home page",
            "fullTitle": "Mocha is a test framework and chai is the assertion library \"before all\" hook: Launching the home page",
            "timedOut": false,
            "duration": 4982,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "55bac91f-eede-470f-8b7c-2c19864da672",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "Verifying the homepage title",
            "fullTitle": "Mocha is a test framework and chai is the assertion library Verifying the homepage title",
            "timedOut": false,
            "duration": 10,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "dfd681be-4212-4f05-85d0-f3302c5e99fa",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [
          {
            "uuid": "172ca1ec-690f-4147-8421-65fe736fe78d",
            "title": "sample-demo-test",
            "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
            "file": "\\src\\test\\main-test-engine.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Navigating to the Sample DemoPage",
                "fullTitle": "Mocha is a test framework and chai is the assertion library sample-demo-test Navigating to the Sample DemoPage",
                "timedOut": false,
                "duration": 386,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "5d0cbbe6-a47a-47c0-aea7-ccafa64354c9",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Enter your message",
                "fullTitle": "Mocha is a test framework and chai is the assertion library sample-demo-test Enter your message",
                "timedOut": false,
                "duration": 109,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "0e51e9d6-049a-41ec-b270-e1f89823be79",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Click on Show Message button to display message entered in input field",
                "fullTitle": "Mocha is a test framework and chai is the assertion library sample-demo-test Click on Show Message button to display message entered in input field",
                "timedOut": false,
                "duration": 69,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "3ce19d28-d2c5-401b-8d6c-59d512f34cbe",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Message Verification",
                "fullTitle": "Mocha is a test framework and chai is the assertion library sample-demo-test Message Verification",
                "timedOut": false,
                "duration": 34,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "9460c6b2-ff78-4eb3-a0e0-8b8d9968d630",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Enter Value for a and b",
                "fullTitle": "Mocha is a test framework and chai is the assertion library sample-demo-test Enter Value for a and b",
                "timedOut": false,
                "duration": 130,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "347b22e0-5342-4df2-80c5-7d9b0739dedd",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Click on Show Message button to display message entered in input field",
                "fullTitle": "Mocha is a test framework and chai is the assertion library sample-demo-test Click on Show Message button to display message entered in input field",
                "timedOut": false,
                "duration": 67,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "98a86a2d-ce1d-41e2-9af3-0a0d2107bc20",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Message Verification",
                "fullTitle": "Mocha is a test framework and chai is the assertion library sample-demo-test Message Verification",
                "timedOut": false,
                "duration": 31,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "192bd548-fb8e-4ae4-8346-935e2c535aa4",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "5d0cbbe6-a47a-47c0-aea7-ccafa64354c9",
              "0e51e9d6-049a-41ec-b270-e1f89823be79",
              "3ce19d28-d2c5-401b-8d6c-59d512f34cbe",
              "9460c6b2-ff78-4eb3-a0e0-8b8d9968d630",
              "347b22e0-5342-4df2-80c5-7d9b0739dedd",
              "98a86a2d-ce1d-41e2-9af3-0a0d2107bc20",
              "192bd548-fb8e-4ae4-8346-935e2c535aa4"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 826,
            "root": false,
            "rootEmpty": false,
            "_timeout": 100000
          },
          {
            "uuid": "007c4c1a-1254-4c5a-a9ce-61db755a1048",
            "title": "checkbox-demo-test",
            "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
            "file": "\\src\\test\\main-test-engine.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Navigating to checkbox demo Page",
                "fullTitle": "Mocha is a test framework and chai is the assertion library checkbox-demo-test Navigating to checkbox demo Page",
                "timedOut": false,
                "duration": 319,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "946e8b78-eb89-4850-b607-b156d26fc872",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Clicking on the checkbox will display a success message",
                "fullTitle": "Mocha is a test framework and chai is the assertion library checkbox-demo-test Clicking on the checkbox will display a success message",
                "timedOut": false,
                "duration": 46,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "e9b3cde7-1193-4161-a475-7338fb380837",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "click on the checkall button and verify all the checkboxes are selected",
                "fullTitle": "Mocha is a test framework and chai is the assertion library checkbox-demo-test click on the checkall button and verify all the checkboxes are selected",
                "timedOut": false,
                "duration": 35,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "919cb51b-0a5b-4a7f-b196-19ba38471269",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Click on 'Check All' to check all checkboxes at once",
                "fullTitle": "Mocha is a test framework and chai is the assertion library checkbox-demo-test Click on 'Check All' to check all checkboxes at once",
                "timedOut": false,
                "duration": 68,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "9ed62778-450b-4423-8ce3-f316eb983d1f",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "When you check all the checkboxes, button will change to Uncheck All",
                "fullTitle": "Mocha is a test framework and chai is the assertion library checkbox-demo-test When you check all the checkboxes, button will change to Uncheck All",
                "timedOut": false,
                "duration": 99,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "8e225e03-d2ce-4d1c-b485-03996506bbe9",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Click on uncheck all to check all checkboxes at once",
                "fullTitle": "Mocha is a test framework and chai is the assertion library checkbox-demo-test Click on uncheck all to check all checkboxes at once",
                "timedOut": false,
                "duration": 40,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "bcd3d0bd-f8d2-417b-b778-29d0a2dbe215",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "When you check all the checkboxes, button will change to check All",
                "fullTitle": "Mocha is a test framework and chai is the assertion library checkbox-demo-test When you check all the checkboxes, button will change to check All",
                "timedOut": false,
                "duration": 70,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "7993ef16-f747-49fa-9c42-ccf55dd08984",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "946e8b78-eb89-4850-b607-b156d26fc872",
              "e9b3cde7-1193-4161-a475-7338fb380837",
              "919cb51b-0a5b-4a7f-b196-19ba38471269",
              "9ed62778-450b-4423-8ce3-f316eb983d1f",
              "8e225e03-d2ce-4d1c-b485-03996506bbe9",
              "bcd3d0bd-f8d2-417b-b778-29d0a2dbe215",
              "7993ef16-f747-49fa-9c42-ccf55dd08984"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 677,
            "root": false,
            "rootEmpty": false,
            "_timeout": 100000
          },
          {
            "uuid": "11a78ead-7835-4faa-b61f-5368654141a5",
            "title": "radiobutton-demo-test",
            "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
            "file": "\\src\\test\\main-test-engine.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Navigating to radio button demo Page",
                "fullTitle": "Mocha is a test framework and chai is the assertion library radiobutton-demo-test Navigating to radio button demo Page",
                "timedOut": false,
                "duration": 277,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "6ef84825-7aba-448a-9ba2-efeefc7a38f5",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Select gender as Male and Click on button to get the selected value and verify it",
                "fullTitle": "Mocha is a test framework and chai is the assertion library radiobutton-demo-test Select gender as Male and Click on button to get the selected value and verify it",
                "timedOut": false,
                "duration": 193,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "92bdc4db-11a6-47a3-adc1-c30ad4dc5f39",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Select gender as Female and Click on button to get the selected value and verify it",
                "fullTitle": "Mocha is a test framework and chai is the assertion library radiobutton-demo-test Select gender as Female and Click on button to get the selected value and verify it",
                "timedOut": false,
                "duration": 118,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "4a817b4c-b723-4a2f-bfd3-d6c9ea50380d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Click on button to get the selected values from gender(M) and Age group(0 to 5)",
                "fullTitle": "Mocha is a test framework and chai is the assertion library radiobutton-demo-test Click on button to get the selected values from gender(M) and Age group(0 to 5)",
                "timedOut": false,
                "duration": 234,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "af7a4a4f-c938-4747-b2da-af8abfc1ebb1",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Click on button to get the selected values from gender(M) and Age group(5 to 15)",
                "fullTitle": "Mocha is a test framework and chai is the assertion library radiobutton-demo-test Click on button to get the selected values from gender(M) and Age group(5 to 15)",
                "timedOut": false,
                "duration": 161,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "d63756dd-ebbf-435c-90bb-6ea3c6f37da2",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Click on button to get the selected values from gender(M) and Age group(15 to 50)",
                "fullTitle": "Mocha is a test framework and chai is the assertion library radiobutton-demo-test Click on button to get the selected values from gender(M) and Age group(15 to 50)",
                "timedOut": false,
                "duration": 182,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "f44faaa0-84b2-44c6-87b4-8383d0c52ccf",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Click on button to get the selected values from gender(F) and Age group(0 to 5)",
                "fullTitle": "Mocha is a test framework and chai is the assertion library radiobutton-demo-test Click on button to get the selected values from gender(F) and Age group(0 to 5)",
                "timedOut": false,
                "duration": 141,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "6a4a4cce-5791-48d4-bad2-cc147550a92f",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Click on button to get the selected values from gender(F) and Age group(5 to 15)",
                "fullTitle": "Mocha is a test framework and chai is the assertion library radiobutton-demo-test Click on button to get the selected values from gender(F) and Age group(5 to 15)",
                "timedOut": false,
                "duration": 146,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "f0fb9327-2268-4440-8a37-c9f217a4113b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Click on button to get the selected values from gender(F) and Age group(15 to 50)",
                "fullTitle": "Mocha is a test framework and chai is the assertion library radiobutton-demo-test Click on button to get the selected values from gender(F) and Age group(15 to 50)",
                "timedOut": false,
                "duration": 180,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "94533b4d-0705-4384-9a3a-c7c598a95c1b",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "6ef84825-7aba-448a-9ba2-efeefc7a38f5",
              "92bdc4db-11a6-47a3-adc1-c30ad4dc5f39",
              "4a817b4c-b723-4a2f-bfd3-d6c9ea50380d",
              "af7a4a4f-c938-4747-b2da-af8abfc1ebb1",
              "d63756dd-ebbf-435c-90bb-6ea3c6f37da2",
              "f44faaa0-84b2-44c6-87b4-8383d0c52ccf",
              "6a4a4cce-5791-48d4-bad2-cc147550a92f",
              "f0fb9327-2268-4440-8a37-c9f217a4113b",
              "94533b4d-0705-4384-9a3a-c7c598a95c1b"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1632,
            "root": false,
            "rootEmpty": false,
            "_timeout": 100000
          },
          {
            "uuid": "b39631c6-4064-48a0-8304-f167d3076ee1",
            "title": "drop-down-list",
            "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
            "file": "\\src\\test\\main-test-engine.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Navigating to drop-down-list demo Page",
                "fullTitle": "Mocha is a test framework and chai is the assertion library drop-down-list Navigating to drop-down-list demo Page",
                "timedOut": false,
                "duration": 329,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "5abdbb3e-5409-413c-ab0a-e969fb03b8d0",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Selected value from the list will display below the dropdown",
                "fullTitle": "Mocha is a test framework and chai is the assertion library drop-down-list Selected value from the list will display below the dropdown",
                "timedOut": false,
                "duration": 2515,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "25dbdc6e-4ecf-4dc1-b5b3-df12c34e04b0",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "By clicking on the buttons, you can get value from the list which \n    will display just below the buttons",
                "fullTitle": "Mocha is a test framework and chai is the assertion library drop-down-list By clicking on the buttons, you can get value from the list which \n    will display just below the buttons",
                "timedOut": false,
                "duration": 7729,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {
                  "message": "AssertionError: expected 'First selected option is : Pennsylvania' to equal 'First selected option is : Washington'",
                  "estack": "AssertionError: expected 'First selected option is : Pennsylvania' to equal 'First selected option is : Washington'\n    at _callee4$ (D:/newJSTestAutomation/testAuomationWithJS/src/test/module-one/drop-down-list.js:41:32)\n    at tryCatch (node_modules\\babel-polyfill\\node_modules\\regenerator-runtime\\runtime.js:65:40)\n    at Generator.invoke [as _invoke] (node_modules\\babel-polyfill\\node_modules\\regenerator-runtime\\runtime.js:303:22)\n    at Generator.prototype.(anonymous function) [as next] (node_modules\\babel-polyfill\\node_modules\\regenerator-runtime\\runtime.js:117:21)\n    at step (src\\test\\module-one\\drop-down-list.js:11:191)\n    at D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\module-one\\drop-down-list.js:11:361\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)",
                  "diff": "- First selected option is : Pennsylvania\n+ First selected option is : Washington\n"
                },
                "isRoot": false,
                "uuid": "0ba612ea-04d5-4d36-88cc-26717303060f",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "5abdbb3e-5409-413c-ab0a-e969fb03b8d0",
              "25dbdc6e-4ecf-4dc1-b5b3-df12c34e04b0"
            ],
            "failures": [
              "0ba612ea-04d5-4d36-88cc-26717303060f"
            ],
            "pending": [],
            "skipped": [],
            "duration": 10573,
            "root": false,
            "rootEmpty": false,
            "_timeout": 100000
          },
          {
            "uuid": "03696d5f-9766-47c5-acbd-fd5ef2211ce8",
            "title": "input-form-submit",
            "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
            "file": "\\src\\test\\main-test-engine.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Navigating to inout form submit page",
                "fullTitle": "Mocha is a test framework and chai is the assertion library input-form-submit Navigating to inout form submit page",
                "timedOut": false,
                "duration": 509,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "7a05fc21-5a83-46e4-a59f-446bef67fe47",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Input form with validations",
                "fullTitle": "Mocha is a test framework and chai is the assertion library input-form-submit Input form with validations",
                "timedOut": false,
                "duration": 2789,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {
                  "message": "Error: Form has not been submitted completely",
                  "estack": "Error: Form has not been submitted completely\n    at _callee2$ (D:/newJSTestAutomation/testAuomationWithJS/src/test/module-one/input-form-submit.js:49:11)\n    at tryCatch (node_modules\\babel-polyfill\\node_modules\\regenerator-runtime\\runtime.js:65:40)\n    at Generator.invoke [as _invoke] (node_modules\\babel-polyfill\\node_modules\\regenerator-runtime\\runtime.js:303:22)\n    at Generator.prototype.(anonymous function) [as next] (node_modules\\babel-polyfill\\node_modules\\regenerator-runtime\\runtime.js:117:21)\n    at step (src\\test\\module-one\\input-form-submit.js:13:191)\n    at D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\module-one\\input-form-submit.js:13:361\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)"
                },
                "isRoot": false,
                "uuid": "60652ed9-5ac0-43eb-ab38-d11d28d3d1c5",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "7a05fc21-5a83-46e4-a59f-446bef67fe47"
            ],
            "failures": [
              "60652ed9-5ac0-43eb-ab38-d11d28d3d1c5"
            ],
            "pending": [],
            "skipped": [],
            "duration": 3298,
            "root": false,
            "rootEmpty": false,
            "_timeout": 100000
          },
          {
            "uuid": "3ab1a19d-bff5-41d0-86c3-40ec0e915d4e",
            "title": "ajax-form-submit",
            "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
            "file": "\\src\\test\\main-test-engine.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Navigating to drop-down-list demo Page",
                "fullTitle": "Mocha is a test framework and chai is the assertion library ajax-form-submit Navigating to drop-down-list demo Page",
                "timedOut": false,
                "duration": 300,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "c9002174-77b7-43cf-9760-b5e589b303e0",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Ajax Form Submit with Loading icon enter name, description and Submit",
                "fullTitle": "Mocha is a test framework and chai is the assertion library ajax-form-submit Ajax Form Submit with Loading icon enter name, description and Submit",
                "timedOut": false,
                "duration": 385,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "1670f9d5-e8bc-4c41-a5f2-49684b09873b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Loading icon will be shown as progress about the server side execution",
                "fullTitle": "Mocha is a test framework and chai is the assertion library ajax-form-submit Loading icon will be shown as progress about the server side execution",
                "timedOut": false,
                "duration": 1020,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "2bc433dc-bc62-4f69-abd8-a52bc0aaf589",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "On processing, the submit button will be hidden to prevent duplicate submits.",
                "fullTitle": "Mocha is a test framework and chai is the assertion library ajax-form-submit On processing, the submit button will be hidden to prevent duplicate submits.",
                "timedOut": false,
                "duration": 1017,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "c0a0216f-b52b-46fc-89e5-a8ceebf377dc",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "c9002174-77b7-43cf-9760-b5e589b303e0",
              "1670f9d5-e8bc-4c41-a5f2-49684b09873b",
              "2bc433dc-bc62-4f69-abd8-a52bc0aaf589",
              "c0a0216f-b52b-46fc-89e5-a8ceebf377dc"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2722,
            "root": false,
            "rootEmpty": false,
            "_timeout": 100000
          },
          {
            "uuid": "7ab306c3-d228-4a5e-b3f4-dfcf8cc1b07a",
            "title": "jquery-select-dropdown",
            "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
            "file": "\\src\\test\\main-test-engine.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Navigating to drop-down-list demo Page",
                "fullTitle": "Mocha is a test framework and chai is the assertion library jquery-select-dropdown Navigating to drop-down-list demo Page",
                "timedOut": false,
                "duration": 951,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "38e78a8c-6e09-43e8-a0af-6390b396a99e",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Drop Down with Search box",
                "fullTitle": "Mocha is a test framework and chai is the assertion library jquery-select-dropdown Drop Down with Search box",
                "timedOut": false,
                "duration": 2308,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "5539cb31-2dc1-4fde-a28f-a8b48776ee61",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Multi Select - Search and Select multiple states",
                "fullTitle": "Mocha is a test framework and chai is the assertion library jquery-select-dropdown Multi Select - Search and Select multiple states",
                "timedOut": false,
                "duration": 7070,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "0f3b1d0b-b491-4870-8f76-1f13b1b8c4ef",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Multi UnSelect - Search and Select multiple states",
                "fullTitle": "Mocha is a test framework and chai is the assertion library jquery-select-dropdown Multi UnSelect - Search and Select multiple states",
                "timedOut": false,
                "duration": 3938,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "1af2ac8a-6bc1-4953-ace6-9200eef7caad",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Select US Outlying Territories : Drop Down with Ensabled values",
                "fullTitle": "Mocha is a test framework and chai is the assertion library jquery-select-dropdown Select US Outlying Territories : Drop Down with Ensabled values",
                "timedOut": false,
                "duration": 989,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "3c650dd9-b882-4b92-8ff5-152d7f98e349",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Select US Outlying Territories : Drop Down with disabled values",
                "fullTitle": "Mocha is a test framework and chai is the assertion library jquery-select-dropdown Select US Outlying Territories : Drop Down with disabled values",
                "timedOut": false,
                "duration": 1170,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "e551bfa9-6acd-442b-a937-42e1ea3aaf7a",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "38e78a8c-6e09-43e8-a0af-6390b396a99e",
              "5539cb31-2dc1-4fde-a28f-a8b48776ee61",
              "0f3b1d0b-b491-4870-8f76-1f13b1b8c4ef",
              "1af2ac8a-6bc1-4953-ace6-9200eef7caad",
              "3c650dd9-b882-4b92-8ff5-152d7f98e349",
              "e551bfa9-6acd-442b-a937-42e1ea3aaf7a"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 16426,
            "root": false,
            "rootEmpty": false,
            "_timeout": 100000
          }
        ],
        "passes": [
          "dfd681be-4212-4f05-85d0-f3302c5e99fa"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 10,
        "root": false,
        "rootEmpty": false,
        "_timeout": 100000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 100000
  },
  "copyrightYear": 2019
}