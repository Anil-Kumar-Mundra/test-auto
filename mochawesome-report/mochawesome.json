{
  "stats": {
    "suites": 8,
    "tests": 39,
    "passes": 37,
    "pending": 0,
    "failures": 2,
    "start": "2019-03-05T09:23:03.014Z",
    "end": "2019-03-05T09:24:01.040Z",
    "duration": 58026,
    "testsRegistered": 39,
    "passPercent": 94.9,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "f895254a-974f-4795-ac1d-0ab7b42590da",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "5b8d122b-201e-4d05-926a-b596e11c5d7a",
        "title": "Mocha is a test framework and chai is the assertion library",
        "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
        "file": "\\src\\test\\main-test-engine.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook: Launching the home page",
            "fullTitle": "Mocha is a test framework and chai is the assertion library \"before all\" hook: Launching the home page",
            "timedOut": false,
            "duration": 8034,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "b33859da-e35c-4f4c-9bee-a968f5baf742",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "Verifying the homepage title",
            "fullTitle": "Mocha is a test framework and chai is the assertion library Verifying the homepage title",
            "timedOut": false,
            "duration": 9,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "581e570e-df43-4ea3-9fc2-4aebcf31185a",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [
          {
            "uuid": "a85ec091-b59d-49f5-817b-b20b114a7aa5",
            "title": "Sample Demo Input",
            "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
            "file": "\\src\\test\\main-test-engine.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Navigating to the Sample DemoPage",
                "fullTitle": "Mocha is a test framework and chai is the assertion library Sample Demo Input Navigating to the Sample DemoPage",
                "timedOut": false,
                "duration": 632,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "53dde0cb-f088-4ab2-b395-9e4c4f2391ea",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Enter your message",
                "fullTitle": "Mocha is a test framework and chai is the assertion library Sample Demo Input Enter your message",
                "timedOut": false,
                "duration": 254,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "eb28560a-9123-41aa-87f0-43479f57c9b0",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Click on Show Message button to display message entered in input field",
                "fullTitle": "Mocha is a test framework and chai is the assertion library Sample Demo Input Click on Show Message button to display message entered in input field",
                "timedOut": false,
                "duration": 75,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "252d33e6-a6ff-4d85-afd8-495ffebfc2ca",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Message Verification",
                "fullTitle": "Mocha is a test framework and chai is the assertion library Sample Demo Input Message Verification",
                "timedOut": false,
                "duration": 51,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "ede87802-2fde-4526-98e4-7a49cc934372",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Enter Value for a and b",
                "fullTitle": "Mocha is a test framework and chai is the assertion library Sample Demo Input Enter Value for a and b",
                "timedOut": false,
                "duration": 88,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "e5680c81-ef9a-4f3c-b59c-f4c0b03a4cd5",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Click on Show Message button to display message entered in input field",
                "fullTitle": "Mocha is a test framework and chai is the assertion library Sample Demo Input Click on Show Message button to display message entered in input field",
                "timedOut": false,
                "duration": 72,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "8b55fb77-a430-4bff-9e3b-59fdc8be8cb7",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Message Verification",
                "fullTitle": "Mocha is a test framework and chai is the assertion library Sample Demo Input Message Verification",
                "timedOut": false,
                "duration": 27,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "2cb775c2-7eb7-4f69-92bf-e97c982062b2",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "53dde0cb-f088-4ab2-b395-9e4c4f2391ea",
              "eb28560a-9123-41aa-87f0-43479f57c9b0",
              "252d33e6-a6ff-4d85-afd8-495ffebfc2ca",
              "ede87802-2fde-4526-98e4-7a49cc934372",
              "e5680c81-ef9a-4f3c-b59c-f4c0b03a4cd5",
              "8b55fb77-a430-4bff-9e3b-59fdc8be8cb7",
              "2cb775c2-7eb7-4f69-92bf-e97c982062b2"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1199,
            "root": false,
            "rootEmpty": false,
            "_timeout": 100000
          }
        ],
        "passes": [
          "581e570e-df43-4ea3-9fc2-4aebcf31185a"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 9,
        "root": false,
        "rootEmpty": false,
        "_timeout": 100000
      },
      {
        "uuid": "245d1458-3441-4d40-b685-df9999397842",
        "title": "Sample Demo Checkbox",
        "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
        "file": "\\src\\test\\main-test-engine.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Navigating to checkbox demo Page",
            "fullTitle": "Sample Demo Checkbox Navigating to checkbox demo Page",
            "timedOut": false,
            "duration": 587,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "faa74fd2-f34e-466d-b0e3-df13fa0df0eb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Clicking on the checkbox will display a success message",
            "fullTitle": "Sample Demo Checkbox Clicking on the checkbox will display a success message",
            "timedOut": false,
            "duration": 160,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "92dca145-37d8-45bd-b23d-90ab187d1a7d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "click on the checkall button and verify all the checkboxes are selected",
            "fullTitle": "Sample Demo Checkbox click on the checkall button and verify all the checkboxes are selected",
            "timedOut": false,
            "duration": 90,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "f628b4e5-b970-474d-abe3-19429d334ca6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Click on 'Check All' to check all checkboxes at once",
            "fullTitle": "Sample Demo Checkbox Click on 'Check All' to check all checkboxes at once",
            "timedOut": false,
            "duration": 83,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "754ccb1f-797a-4d7c-9d9e-ad009dce81d7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "When you check all the checkboxes, button will change to Uncheck All",
            "fullTitle": "Sample Demo Checkbox When you check all the checkboxes, button will change to Uncheck All",
            "timedOut": false,
            "duration": 146,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "ac572f77-1d8c-45b3-97ea-cf4bb9c1a044",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Click on uncheck all to check all checkboxes at once",
            "fullTitle": "Sample Demo Checkbox Click on uncheck all to check all checkboxes at once",
            "timedOut": false,
            "duration": 52,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "fd28746e-b52e-49cd-9075-dadf0519277d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "When you check all the checkboxes, button will change to check All",
            "fullTitle": "Sample Demo Checkbox When you check all the checkboxes, button will change to check All",
            "timedOut": false,
            "duration": 87,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "a71f179f-6660-4225-8fd0-5a05adc8b1a9",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "faa74fd2-f34e-466d-b0e3-df13fa0df0eb",
          "92dca145-37d8-45bd-b23d-90ab187d1a7d",
          "f628b4e5-b970-474d-abe3-19429d334ca6",
          "754ccb1f-797a-4d7c-9d9e-ad009dce81d7",
          "ac572f77-1d8c-45b3-97ea-cf4bb9c1a044",
          "fd28746e-b52e-49cd-9075-dadf0519277d",
          "a71f179f-6660-4225-8fd0-5a05adc8b1a9"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1205,
        "root": false,
        "rootEmpty": false,
        "_timeout": 100000
      },
      {
        "uuid": "96709a26-83b5-4f9e-ab0a-fbbb48845b5e",
        "title": "Sample Demo Radio Button",
        "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
        "file": "\\src\\test\\main-test-engine.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Navigating to radio button demo Page",
            "fullTitle": "Sample Demo Radio Button Navigating to radio button demo Page",
            "timedOut": false,
            "duration": 714,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "ca894e6b-404c-45a1-ac3f-33c6eb003478",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Select gender as Male and Click on button to get the selected value and verify it",
            "fullTitle": "Sample Demo Radio Button Select gender as Male and Click on button to get the selected value and verify it",
            "timedOut": false,
            "duration": 270,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "98ccb710-9343-4c8d-aee5-4f02994d2285",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Select gender as Female and Click on button to get the selected value and verify it",
            "fullTitle": "Sample Demo Radio Button Select gender as Female and Click on button to get the selected value and verify it",
            "timedOut": false,
            "duration": 141,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "afc74d2e-cbc7-4e51-b7a7-5991e3320aa0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Click on button to get the selected values from gender(M) and Age group(0 to 5)",
            "fullTitle": "Sample Demo Radio Button Click on button to get the selected values from gender(M) and Age group(0 to 5)",
            "timedOut": false,
            "duration": 398,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "00ea963a-7eea-4297-8d4e-88d46531f03e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Click on button to get the selected values from gender(M) and Age group(5 to 15)",
            "fullTitle": "Sample Demo Radio Button Click on button to get the selected values from gender(M) and Age group(5 to 15)",
            "timedOut": false,
            "duration": 279,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "69891e65-7013-489c-8864-8f1cb4711c27",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Click on button to get the selected values from gender(M) and Age group(15 to 50)",
            "fullTitle": "Sample Demo Radio Button Click on button to get the selected values from gender(M) and Age group(15 to 50)",
            "timedOut": false,
            "duration": 281,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "fa0705ba-8636-47e5-89d3-867133d8cbd3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Click on button to get the selected values from gender(F) and Age group(0 to 5)",
            "fullTitle": "Sample Demo Radio Button Click on button to get the selected values from gender(F) and Age group(0 to 5)",
            "timedOut": false,
            "duration": 284,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "b34d90a9-ea24-4d55-95ec-5fe80aa247a4",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Click on button to get the selected values from gender(F) and Age group(5 to 15)",
            "fullTitle": "Sample Demo Radio Button Click on button to get the selected values from gender(F) and Age group(5 to 15)",
            "timedOut": false,
            "duration": 326,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "d6a45ab9-478f-4ba3-a688-46e42c3e1fe0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Click on button to get the selected values from gender(F) and Age group(15 to 50)",
            "fullTitle": "Sample Demo Radio Button Click on button to get the selected values from gender(F) and Age group(15 to 50)",
            "timedOut": false,
            "duration": 314,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "11f726c1-49c7-46ba-8e94-2914f45fec93",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "ca894e6b-404c-45a1-ac3f-33c6eb003478",
          "98ccb710-9343-4c8d-aee5-4f02994d2285",
          "afc74d2e-cbc7-4e51-b7a7-5991e3320aa0",
          "00ea963a-7eea-4297-8d4e-88d46531f03e",
          "69891e65-7013-489c-8864-8f1cb4711c27",
          "fa0705ba-8636-47e5-89d3-867133d8cbd3",
          "b34d90a9-ea24-4d55-95ec-5fe80aa247a4",
          "d6a45ab9-478f-4ba3-a688-46e42c3e1fe0",
          "11f726c1-49c7-46ba-8e94-2914f45fec93"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 3007,
        "root": false,
        "rootEmpty": false,
        "_timeout": 100000
      },
      {
        "uuid": "9d53fb78-34fc-41cc-879b-f1e262afa6e2",
        "title": "Sample demo drop-down-list",
        "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
        "file": "\\src\\test\\main-test-engine.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Navigating to drop-down-list demo Page",
            "fullTitle": "Sample demo drop-down-list Navigating to drop-down-list demo Page",
            "timedOut": false,
            "duration": 725,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "6bbc63a2-3ee6-4409-85a6-2683f9d95bca",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Selected value from the list will display below the dropdown",
            "fullTitle": "Sample demo drop-down-list Selected value from the list will display below the dropdown",
            "timedOut": false,
            "duration": 2041,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "c7ac2e99-0c45-47bb-8cd9-cc4e3fbfb2f3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "By clicking on the buttons, you can get value from the list which \n    will display just below the buttons",
            "fullTitle": "Sample demo drop-down-list By clicking on the buttons, you can get value from the list which \n    will display just below the buttons",
            "timedOut": false,
            "duration": 2880,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "74340fbf-20b2-47ee-ab29-cad9f10cc939",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "6bbc63a2-3ee6-4409-85a6-2683f9d95bca",
          "c7ac2e99-0c45-47bb-8cd9-cc4e3fbfb2f3",
          "74340fbf-20b2-47ee-ab29-cad9f10cc939"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 5646,
        "root": false,
        "rootEmpty": false,
        "_timeout": 100000
      },
      {
        "uuid": "516e52d9-a5e2-43bc-ac7d-0df72b7631da",
        "title": "Sample demo submit form",
        "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
        "file": "\\src\\test\\main-test-engine.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Navigating to inout form submit page",
            "fullTitle": "Sample demo submit form Navigating to inout form submit page",
            "timedOut": false,
            "duration": 597,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "772d850d-388c-4af6-baa7-1f0195f40132",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Input form with validations",
            "fullTitle": "Sample demo submit form Input form with validations",
            "timedOut": false,
            "duration": 2716,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {
              "message": "Error: Form has not been submitted completely",
              "estack": "Error: Form has not been submitted completely\n    at _callee2$ (D:/newJSTestAutomation/testAuomationWithJS/src/test/module-one/input-form-submit.js:49:11)\n    at tryCatch (node_modules\\babel-polyfill\\node_modules\\regenerator-runtime\\runtime.js:65:40)\n    at Generator.invoke [as _invoke] (node_modules\\babel-polyfill\\node_modules\\regenerator-runtime\\runtime.js:303:22)\n    at Generator.prototype.(anonymous function) [as next] (node_modules\\babel-polyfill\\node_modules\\regenerator-runtime\\runtime.js:117:21)\n    at step (src\\test\\module-one\\input-form-submit.js:13:191)\n    at D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\module-one\\input-form-submit.js:13:361\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)"
            },
            "isRoot": false,
            "uuid": "df39a891-06ed-4e07-a37b-2bbba019ac88",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "772d850d-388c-4af6-baa7-1f0195f40132"
        ],
        "failures": [
          "df39a891-06ed-4e07-a37b-2bbba019ac88"
        ],
        "pending": [],
        "skipped": [],
        "duration": 3313,
        "root": false,
        "rootEmpty": false,
        "_timeout": 100000
      },
      {
        "uuid": "90365491-42a2-4bf1-b80c-d9867bef0508",
        "title": "Sample demo ajax form",
        "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
        "file": "\\src\\test\\main-test-engine.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Navigating to drop-down-list demo Page",
            "fullTitle": "Sample demo ajax form Navigating to drop-down-list demo Page",
            "timedOut": false,
            "duration": 697,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "de751185-5209-4464-b044-f08a8daef6d0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Ajax Form Submit with Loading icon enter name, description and Submit",
            "fullTitle": "Sample demo ajax form Ajax Form Submit with Loading icon enter name, description and Submit",
            "timedOut": false,
            "duration": 778,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "6f3ef1e5-8f98-4087-9399-696aa331fe86",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Loading icon will be shown as progress about the server side execution",
            "fullTitle": "Sample demo ajax form Loading icon will be shown as progress about the server side execution",
            "timedOut": false,
            "duration": 1003,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "e0eb944d-f39e-469a-937a-c5ea40abe4c4",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "On processing, the submit button will be hidden to prevent duplicate submits.",
            "fullTitle": "Sample demo ajax form On processing, the submit button will be hidden to prevent duplicate submits.",
            "timedOut": false,
            "duration": 1024,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "8b904174-daa0-4c7e-b3cc-5e245cc0831d",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "de751185-5209-4464-b044-f08a8daef6d0",
          "6f3ef1e5-8f98-4087-9399-696aa331fe86",
          "e0eb944d-f39e-469a-937a-c5ea40abe4c4",
          "8b904174-daa0-4c7e-b3cc-5e245cc0831d"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 3502,
        "root": false,
        "rootEmpty": false,
        "_timeout": 100000
      },
      {
        "uuid": "88fc50d9-4cf8-491e-b4d4-58d31db98dc1",
        "title": "Sample demo jquery select",
        "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
        "file": "\\src\\test\\main-test-engine.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Navigating to drop-down-list demo Page",
            "fullTitle": "Sample demo jquery select Navigating to drop-down-list demo Page",
            "timedOut": false,
            "duration": 2347,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "719f5eeb-a9b7-444e-a63b-24d0d4737829",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Drop Down with Search box",
            "fullTitle": "Sample demo jquery select Drop Down with Search box",
            "timedOut": false,
            "duration": 11315,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {
              "message": "TimeoutError: Waiting for element to be located By(xpath, //span[text()=\"Denmark\"])\nWait timed out after 1000ms",
              "estack": "TimeoutError: Waiting for element to be located By(xpath, //span[text()=\"Denmark\"])\nWait timed out after 1000ms\n    at D:\\newJSTestAutomation\\testAuomationWithJS\\node_modules\\selenium-webdriver\\lib\\webdriver.js:834:17\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)"
            },
            "isRoot": false,
            "uuid": "1f25be66-9b66-4e42-a422-7aa3102cb9b8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Multi Select - Search and Select multiple states",
            "fullTitle": "Sample demo jquery select Multi Select - Search and Select multiple states",
            "timedOut": false,
            "duration": 10365,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "a4a182bb-d715-4148-8b1c-aa459c3ca504",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Multi UnSelect - Search and Select multiple states",
            "fullTitle": "Sample demo jquery select Multi UnSelect - Search and Select multiple states",
            "timedOut": false,
            "duration": 5692,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "d7c67279-9bac-4885-b4a5-53c0e84b7f21",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Select US Outlying Territories : Drop Down with Ensabled values",
            "fullTitle": "Sample demo jquery select Select US Outlying Territories : Drop Down with Ensabled values",
            "timedOut": false,
            "duration": 853,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "5ca1cc39-00fe-44b9-a43b-acb3787c5cb4",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Select US Outlying Territories : Drop Down with disabled values",
            "fullTitle": "Sample demo jquery select Select US Outlying Territories : Drop Down with disabled values",
            "timedOut": false,
            "duration": 1367,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "03877c5e-6b90-4e6f-ac0d-674699bf03c1",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "719f5eeb-a9b7-444e-a63b-24d0d4737829",
          "a4a182bb-d715-4148-8b1c-aa459c3ca504",
          "d7c67279-9bac-4885-b4a5-53c0e84b7f21",
          "5ca1cc39-00fe-44b9-a43b-acb3787c5cb4",
          "03877c5e-6b90-4e6f-ac0d-674699bf03c1"
        ],
        "failures": [
          "1f25be66-9b66-4e42-a422-7aa3102cb9b8"
        ],
        "pending": [],
        "skipped": [],
        "duration": 31939,
        "root": false,
        "rootEmpty": false,
        "_timeout": 100000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 100000
  },
  "copyrightYear": 2019
}