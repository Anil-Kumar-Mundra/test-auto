{
  "stats": {
    "suites": 1,
    "tests": 8,
    "passes": 7,
    "pending": 0,
    "failures": 1,
    "start": "2019-02-12T16:30:10.987Z",
    "end": "2019-02-12T16:30:17.175Z",
    "duration": 6188,
    "testsRegistered": 8,
    "passPercent": 87.5,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "905231c4-0e40-470d-b7e2-db991a99dc3f",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "0302a5a1-3f05-4821-8a43-862923b0c077",
        "title": "Mocha is a test framework and chai is the assertion library",
        "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\test\\test1.js",
        "file": "\\test\\test1.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook: Launching the home page",
            "fullTitle": "Mocha is a test framework and chai is the assertion library \"before all\" hook: Launching the home page",
            "timedOut": false,
            "duration": 5142,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "c8ac80a7-c748-4b0e-9540-bb38f793c530",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "Verifying the homepage title",
            "fullTitle": "Mocha is a test framework and chai is the assertion library Verifying the homepage title",
            "timedOut": false,
            "duration": 11,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "\"simple string\"",
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "f3074a0d-24c9-4575-b7bc-68670787944b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Navigating to the Sample DemoPage",
            "fullTitle": "Mocha is a test framework and chai is the assertion library Navigating to the Sample DemoPage",
            "timedOut": false,
            "duration": 356,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "89028f6e-8b91-40f4-aee8-09c0bf08c75a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Enter the text in sample message field",
            "fullTitle": "Mocha is a test framework and chai is the assertion library Enter the text in sample message field",
            "timedOut": false,
            "duration": 231,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "e3622c97-bb46-4c34-a696-1bc89bcf6732",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Display Message",
            "fullTitle": "Mocha is a test framework and chai is the assertion library Display Message",
            "timedOut": false,
            "duration": 120,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "2295f9f8-4d6f-431a-b673-3c7c3624ec3e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Text verification",
            "fullTitle": "Mocha is a test framework and chai is the assertion library Text verification",
            "timedOut": false,
            "duration": 45,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "b7f327b6-a54e-4c92-b9ae-2e174fac1514",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Enter the two numbers",
            "fullTitle": "Mocha is a test framework and chai is the assertion library Enter the two numbers",
            "timedOut": false,
            "duration": 123,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "ccec7121-9ebc-4dcb-a19f-ad959dadcd91",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "click on get total",
            "fullTitle": "Mocha is a test framework and chai is the assertion library click on get total",
            "timedOut": false,
            "duration": 86,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "aec4ad5d-c6c8-4c1b-82e9-989f7c8b60ed",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "verify total",
            "fullTitle": "Mocha is a test framework and chai is the assertion library verify total",
            "timedOut": false,
            "duration": 41,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {
              "message": "AssertionError: expected '5' to equal 24",
              "estack": "AssertionError: expected '5' to equal 24\n    at Suite._callee9$ (D:/newJSTestAutomation/testAuomationWithJS/test/test1.js:62:14)\n    at tryCatch (node_modules\\babel-polyfill\\node_modules\\regenerator-runtime\\runtime.js:65:40)\n    at Generator.invoke [as _invoke] (node_modules\\babel-polyfill\\node_modules\\regenerator-runtime\\runtime.js:303:22)\n    at Generator.prototype.(anonymous function) [as next] (node_modules\\babel-polyfill\\node_modules\\regenerator-runtime\\runtime.js:117:21)\n    at step (test\\test1.js:11:191)\n    at D:\\newJSTestAutomation\\testAuomationWithJS\\test\\test1.js:11:361\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)"
            },
            "isRoot": false,
            "uuid": "e7c0e344-eaa7-48e5-b6bc-397fe14fb8c6",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "f3074a0d-24c9-4575-b7bc-68670787944b",
          "89028f6e-8b91-40f4-aee8-09c0bf08c75a",
          "e3622c97-bb46-4c34-a696-1bc89bcf6732",
          "2295f9f8-4d6f-431a-b673-3c7c3624ec3e",
          "b7f327b6-a54e-4c92-b9ae-2e174fac1514",
          "ccec7121-9ebc-4dcb-a19f-ad959dadcd91",
          "aec4ad5d-c6c8-4c1b-82e9-989f7c8b60ed"
        ],
        "failures": [
          "e7c0e344-eaa7-48e5-b6bc-397fe14fb8c6"
        ],
        "pending": [],
        "skipped": [],
        "duration": 1013,
        "root": false,
        "rootEmpty": false,
        "_timeout": 100000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 100000
  },
  "copyrightYear": 2019
}