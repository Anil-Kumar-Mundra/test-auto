{
  "stats": {
    "suites": 2,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2019-04-08T08:57:53.068Z",
    "end": "2019-04-08T08:58:04.766Z",
    "duration": 11698,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "d19d55d6-0d17-436e-9b15-744fc0064bc8",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "9b940f53-0655-4e77-9838-dd201f2b2d4f",
        "title": "Mocha is a test framework and chai is the assertion library",
        "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
        "file": "\\src\\test\\main-test-engine.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook: Launching the home page",
            "fullTitle": "Mocha is a test framework and chai is the assertion library \"before all\" hook: Launching the home page",
            "timedOut": false,
            "duration": 6473,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "4bef66c9-b81e-486c-b930-d52c8abaaf6a",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after all\" hook: Logout LMS application",
            "fullTitle": "Mocha is a test framework and chai is the assertion library \"after all\" hook: Logout LMS application",
            "timedOut": false,
            "duration": 4310,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "fdcaec8e-c053-479c-85b2-3c0d6c1f9fca",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "Verifying the homepage title",
            "fullTitle": "Mocha is a test framework and chai is the assertion library Verifying the homepage title",
            "timedOut": false,
            "duration": 10,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "a0c72b27-1d87-4266-8eff-719e7c2c5fa9",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [
          {
            "uuid": "1d6fc574-4e6c-4871-878d-4460c8c2cc8c",
            "title": "login-page",
            "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
            "file": "\\src\\test\\main-test-engine.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Enter User Name and password",
                "fullTitle": "Mocha is a test framework and chai is the assertion library login-page Enter User Name and password",
                "timedOut": false,
                "duration": 188,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "62ad48fd-de77-4168-8752-d741a1bdb8c4",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Login to LMS",
                "fullTitle": "Mocha is a test framework and chai is the assertion library login-page Login to LMS",
                "timedOut": false,
                "duration": 618,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "91dca7ae-602b-45df-bea0-f31b89726dcc",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Validate Login",
                "fullTitle": "Mocha is a test framework and chai is the assertion library login-page Validate Login",
                "timedOut": false,
                "duration": 51,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "43c5826e-6c0c-4212-9d89-f358a85a8370",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "62ad48fd-de77-4168-8752-d741a1bdb8c4",
              "91dca7ae-602b-45df-bea0-f31b89726dcc",
              "43c5826e-6c0c-4212-9d89-f358a85a8370"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 857,
            "root": false,
            "rootEmpty": false,
            "_timeout": 100000
          }
        ],
        "passes": [
          "a0c72b27-1d87-4266-8eff-719e7c2c5fa9"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 10,
        "root": false,
        "rootEmpty": false,
        "_timeout": 100000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 100000
  },
  "copyrightYear": 2019
}