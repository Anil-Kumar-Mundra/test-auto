{
  "stats": {
    "suites": 8,
    "tests": 39,
    "passes": 38,
    "pending": 0,
    "failures": 1,
    "start": "2019-03-04T13:59:29.850Z",
    "end": "2019-03-04T14:00:08.939Z",
    "duration": 39089,
    "testsRegistered": 39,
    "passPercent": 97.4,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "80dcffce-898c-40a6-8fa9-391ab33d56c2",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "428a0d43-5f66-454a-a573-7dbd48da5451",
        "title": "Mocha is a test framework and chai is the assertion library",
        "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
        "file": "\\src\\test\\main-test-engine.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook: Launching the home page",
            "fullTitle": "Mocha is a test framework and chai is the assertion library \"before all\" hook: Launching the home page",
            "timedOut": false,
            "duration": 5364,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "e2e50dab-ff92-4522-97dd-956cdbaebe46",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "Verifying the homepage title",
            "fullTitle": "Mocha is a test framework and chai is the assertion library Verifying the homepage title",
            "timedOut": false,
            "duration": 11,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "e022d67f-028e-4dab-bfc3-01ba6aea6d0c",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [
          {
            "uuid": "740dc8fd-35ad-401b-b656-4c38b75ce013",
            "title": "Sample Demo Input",
            "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
            "file": "\\src\\test\\main-test-engine.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Navigating to the Sample DemoPage",
                "fullTitle": "Mocha is a test framework and chai is the assertion library Sample Demo Input Navigating to the Sample DemoPage",
                "timedOut": false,
                "duration": 474,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "b6a955a4-ce76-408f-8039-7790f17bcc4c",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Enter your message",
                "fullTitle": "Mocha is a test framework and chai is the assertion library Sample Demo Input Enter your message",
                "timedOut": false,
                "duration": 137,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "3e42ef0a-0c8b-4e84-bcbe-cf97a7041a11",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Click on Show Message button to display message entered in input field",
                "fullTitle": "Mocha is a test framework and chai is the assertion library Sample Demo Input Click on Show Message button to display message entered in input field",
                "timedOut": false,
                "duration": 116,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "953499f5-733b-43ad-99bb-e485956cde8b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Message Verification",
                "fullTitle": "Mocha is a test framework and chai is the assertion library Sample Demo Input Message Verification",
                "timedOut": false,
                "duration": 41,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "eb00b4b7-27f8-4702-b4af-7869a8d124d6",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Enter Value for a and b",
                "fullTitle": "Mocha is a test framework and chai is the assertion library Sample Demo Input Enter Value for a and b",
                "timedOut": false,
                "duration": 106,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "ff06651a-b160-4e88-85b0-bd76f93228a4",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Click on Show Message button to display message entered in input field",
                "fullTitle": "Mocha is a test framework and chai is the assertion library Sample Demo Input Click on Show Message button to display message entered in input field",
                "timedOut": false,
                "duration": 72,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "6d7cb8da-9a41-4c60-8e78-bb4c6955da3f",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Message Verification",
                "fullTitle": "Mocha is a test framework and chai is the assertion library Sample Demo Input Message Verification",
                "timedOut": false,
                "duration": 37,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "4662c7ca-fd56-4ba1-befb-ce9143f43650",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "b6a955a4-ce76-408f-8039-7790f17bcc4c",
              "3e42ef0a-0c8b-4e84-bcbe-cf97a7041a11",
              "953499f5-733b-43ad-99bb-e485956cde8b",
              "eb00b4b7-27f8-4702-b4af-7869a8d124d6",
              "ff06651a-b160-4e88-85b0-bd76f93228a4",
              "6d7cb8da-9a41-4c60-8e78-bb4c6955da3f",
              "4662c7ca-fd56-4ba1-befb-ce9143f43650"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 983,
            "root": false,
            "rootEmpty": false,
            "_timeout": 100000
          }
        ],
        "passes": [
          "e022d67f-028e-4dab-bfc3-01ba6aea6d0c"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 11,
        "root": false,
        "rootEmpty": false,
        "_timeout": 100000
      },
      {
        "uuid": "31ee25b3-685a-4d41-b19f-68ea9b9307f4",
        "title": "Sample Demo Checkbox",
        "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
        "file": "\\src\\test\\main-test-engine.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Navigating to checkbox demo Page",
            "fullTitle": "Sample Demo Checkbox Navigating to checkbox demo Page",
            "timedOut": false,
            "duration": 431,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "9031e6c7-bc24-4828-b740-44c856d8a66c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Clicking on the checkbox will display a success message",
            "fullTitle": "Sample Demo Checkbox Clicking on the checkbox will display a success message",
            "timedOut": false,
            "duration": 56,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "42346760-8a1d-49b9-bd51-1e03e438f732",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "click on the checkall button and verify all the checkboxes are selected",
            "fullTitle": "Sample Demo Checkbox click on the checkall button and verify all the checkboxes are selected",
            "timedOut": false,
            "duration": 38,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "050dc317-faff-45f0-a32f-e9c524545e95",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Click on 'Check All' to check all checkboxes at once",
            "fullTitle": "Sample Demo Checkbox Click on 'Check All' to check all checkboxes at once",
            "timedOut": false,
            "duration": 55,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "98455aa7-ecd9-4ac5-afdf-7d20840a8db6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "When you check all the checkboxes, button will change to Uncheck All",
            "fullTitle": "Sample Demo Checkbox When you check all the checkboxes, button will change to Uncheck All",
            "timedOut": false,
            "duration": 108,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "c1e7b0d6-4dbd-499e-adfc-258e08b17dae",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Click on uncheck all to check all checkboxes at once",
            "fullTitle": "Sample Demo Checkbox Click on uncheck all to check all checkboxes at once",
            "timedOut": false,
            "duration": 37,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "c2cb7824-8fdd-4657-9398-84e11af98076",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "When you check all the checkboxes, button will change to check All",
            "fullTitle": "Sample Demo Checkbox When you check all the checkboxes, button will change to check All",
            "timedOut": false,
            "duration": 79,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "47490ffa-e0b8-4ddc-bd4b-3c4bb13ab7e1",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "9031e6c7-bc24-4828-b740-44c856d8a66c",
          "42346760-8a1d-49b9-bd51-1e03e438f732",
          "050dc317-faff-45f0-a32f-e9c524545e95",
          "98455aa7-ecd9-4ac5-afdf-7d20840a8db6",
          "c1e7b0d6-4dbd-499e-adfc-258e08b17dae",
          "c2cb7824-8fdd-4657-9398-84e11af98076",
          "47490ffa-e0b8-4ddc-bd4b-3c4bb13ab7e1"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 804,
        "root": false,
        "rootEmpty": false,
        "_timeout": 100000
      },
      {
        "uuid": "ddaf2ede-6eb7-4641-89b7-547ebc45d71d",
        "title": "Sample Demo Radio Button",
        "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
        "file": "\\src\\test\\main-test-engine.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Navigating to radio button demo Page",
            "fullTitle": "Sample Demo Radio Button Navigating to radio button demo Page",
            "timedOut": false,
            "duration": 321,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "b4bcd1af-032b-4112-9550-b4e5d64046a0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Select gender as Male and Click on button to get the selected value and verify it",
            "fullTitle": "Sample Demo Radio Button Select gender as Male and Click on button to get the selected value and verify it",
            "timedOut": false,
            "duration": 175,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "a341652f-e852-4f9f-bd00-f97fe4a601d4",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Select gender as Female and Click on button to get the selected value and verify it",
            "fullTitle": "Sample Demo Radio Button Select gender as Female and Click on button to get the selected value and verify it",
            "timedOut": false,
            "duration": 125,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "82c1cd22-7a32-4228-8ca4-51fcde609690",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Click on button to get the selected values from gender(M) and Age group(0 to 5)",
            "fullTitle": "Sample Demo Radio Button Click on button to get the selected values from gender(M) and Age group(0 to 5)",
            "timedOut": false,
            "duration": 260,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "317fd786-b69b-445d-b8fd-e6b77433b67a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Click on button to get the selected values from gender(M) and Age group(5 to 15)",
            "fullTitle": "Sample Demo Radio Button Click on button to get the selected values from gender(M) and Age group(5 to 15)",
            "timedOut": false,
            "duration": 149,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "77ce703b-df23-443a-96ba-1dbe190b345f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Click on button to get the selected values from gender(M) and Age group(15 to 50)",
            "fullTitle": "Sample Demo Radio Button Click on button to get the selected values from gender(M) and Age group(15 to 50)",
            "timedOut": false,
            "duration": 170,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "30a9c495-e8d2-4098-af4c-8fd70ca3fc11",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Click on button to get the selected values from gender(F) and Age group(0 to 5)",
            "fullTitle": "Sample Demo Radio Button Click on button to get the selected values from gender(F) and Age group(0 to 5)",
            "timedOut": false,
            "duration": 181,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "7a8d59a3-efb4-4ff4-92e7-9d43943b0496",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Click on button to get the selected values from gender(F) and Age group(5 to 15)",
            "fullTitle": "Sample Demo Radio Button Click on button to get the selected values from gender(F) and Age group(5 to 15)",
            "timedOut": false,
            "duration": 161,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "7810188a-47e1-4c16-8505-1ee7b3da30ab",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Click on button to get the selected values from gender(F) and Age group(15 to 50)",
            "fullTitle": "Sample Demo Radio Button Click on button to get the selected values from gender(F) and Age group(15 to 50)",
            "timedOut": false,
            "duration": 127,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "8fb046ee-6827-4052-8a41-939547264b1a",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "b4bcd1af-032b-4112-9550-b4e5d64046a0",
          "a341652f-e852-4f9f-bd00-f97fe4a601d4",
          "82c1cd22-7a32-4228-8ca4-51fcde609690",
          "317fd786-b69b-445d-b8fd-e6b77433b67a",
          "77ce703b-df23-443a-96ba-1dbe190b345f",
          "30a9c495-e8d2-4098-af4c-8fd70ca3fc11",
          "7a8d59a3-efb4-4ff4-92e7-9d43943b0496",
          "7810188a-47e1-4c16-8505-1ee7b3da30ab",
          "8fb046ee-6827-4052-8a41-939547264b1a"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1669,
        "root": false,
        "rootEmpty": false,
        "_timeout": 100000
      },
      {
        "uuid": "67c4c0d8-8783-4889-a5a2-81980aa51524",
        "title": "Sample demo drop-down-list",
        "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
        "file": "\\src\\test\\main-test-engine.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Navigating to drop-down-list demo Page",
            "fullTitle": "Sample demo drop-down-list Navigating to drop-down-list demo Page",
            "timedOut": false,
            "duration": 325,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "3f36db79-07b5-4507-80d9-0f08000de02d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Selected value from the list will display below the dropdown",
            "fullTitle": "Sample demo drop-down-list Selected value from the list will display below the dropdown",
            "timedOut": false,
            "duration": 2696,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "62513b9f-0b2b-49c6-a644-d33597950b09",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "By clicking on the buttons, you can get value from the list which \n    will display just below the buttons",
            "fullTitle": "Sample demo drop-down-list By clicking on the buttons, you can get value from the list which \n    will display just below the buttons",
            "timedOut": false,
            "duration": 3538,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "d83fbf24-7fd2-48e2-b363-1e175226cde5",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "3f36db79-07b5-4507-80d9-0f08000de02d",
          "62513b9f-0b2b-49c6-a644-d33597950b09",
          "d83fbf24-7fd2-48e2-b363-1e175226cde5"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 6559,
        "root": false,
        "rootEmpty": false,
        "_timeout": 100000
      },
      {
        "uuid": "2be37aa1-be7e-495c-b348-e2ac957f17c4",
        "title": "Sample demo submit form",
        "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
        "file": "\\src\\test\\main-test-engine.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Navigating to inout form submit page",
            "fullTitle": "Sample demo submit form Navigating to inout form submit page",
            "timedOut": false,
            "duration": 347,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "7ab2973a-806b-47a6-b2cd-c8c68b0fe255",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Input form with validations",
            "fullTitle": "Sample demo submit form Input form with validations",
            "timedOut": false,
            "duration": 2666,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {
              "message": "Error: Form has not been submitted completely",
              "estack": "Error: Form has not been submitted completely\n    at _callee2$ (D:/newJSTestAutomation/testAuomationWithJS/src/test/module-one/input-form-submit.js:49:11)\n    at tryCatch (node_modules\\babel-polyfill\\node_modules\\regenerator-runtime\\runtime.js:65:40)\n    at Generator.invoke [as _invoke] (node_modules\\babel-polyfill\\node_modules\\regenerator-runtime\\runtime.js:303:22)\n    at Generator.prototype.(anonymous function) [as next] (node_modules\\babel-polyfill\\node_modules\\regenerator-runtime\\runtime.js:117:21)\n    at step (src\\test\\module-one\\input-form-submit.js:13:191)\n    at D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\module-one\\input-form-submit.js:13:361\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)"
            },
            "isRoot": false,
            "uuid": "601c6741-1c3c-4fdb-8670-bdcb2824c8e2",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "7ab2973a-806b-47a6-b2cd-c8c68b0fe255"
        ],
        "failures": [
          "601c6741-1c3c-4fdb-8670-bdcb2824c8e2"
        ],
        "pending": [],
        "skipped": [],
        "duration": 3013,
        "root": false,
        "rootEmpty": false,
        "_timeout": 100000
      },
      {
        "uuid": "c61d8f18-c959-493d-9304-e34270bad762",
        "title": "Sample demo ajax form",
        "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
        "file": "\\src\\test\\main-test-engine.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Navigating to drop-down-list demo Page",
            "fullTitle": "Sample demo ajax form Navigating to drop-down-list demo Page",
            "timedOut": false,
            "duration": 329,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "216116f0-01b0-4f84-9bc7-c68702e457dc",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Ajax Form Submit with Loading icon enter name, description and Submit",
            "fullTitle": "Sample demo ajax form Ajax Form Submit with Loading icon enter name, description and Submit",
            "timedOut": false,
            "duration": 371,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "2b8f7468-8e7d-4b8d-ad08-4b2f1e124c19",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Loading icon will be shown as progress about the server side execution",
            "fullTitle": "Sample demo ajax form Loading icon will be shown as progress about the server side execution",
            "timedOut": false,
            "duration": 1030,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "d737e9fa-4890-4e8e-b41d-4d3bc4130028",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "On processing, the submit button will be hidden to prevent duplicate submits.",
            "fullTitle": "Sample demo ajax form On processing, the submit button will be hidden to prevent duplicate submits.",
            "timedOut": false,
            "duration": 1018,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "b71b1ec0-2eeb-4e31-9346-26d5f811a982",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "216116f0-01b0-4f84-9bc7-c68702e457dc",
          "2b8f7468-8e7d-4b8d-ad08-4b2f1e124c19",
          "d737e9fa-4890-4e8e-b41d-4d3bc4130028",
          "b71b1ec0-2eeb-4e31-9346-26d5f811a982"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 2748,
        "root": false,
        "rootEmpty": false,
        "_timeout": 100000
      },
      {
        "uuid": "b8c9e9f0-b4fe-4c08-8618-0171c8aad0b9",
        "title": "Sample demo jquery select",
        "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
        "file": "\\src\\test\\main-test-engine.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Navigating to drop-down-list demo Page",
            "fullTitle": "Sample demo jquery select Navigating to drop-down-list demo Page",
            "timedOut": false,
            "duration": 1533,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "f31b3607-d395-417d-96eb-6f5758216b58",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Drop Down with Search box",
            "fullTitle": "Sample demo jquery select Drop Down with Search box",
            "timedOut": false,
            "duration": 2387,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "efdb079e-59a0-4be3-92b2-96486fe8f649",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Multi Select - Search and Select multiple states",
            "fullTitle": "Sample demo jquery select Multi Select - Search and Select multiple states",
            "timedOut": false,
            "duration": 7738,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "0f868f8c-6911-4cc6-8450-56525d11010d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Multi UnSelect - Search and Select multiple states",
            "fullTitle": "Sample demo jquery select Multi UnSelect - Search and Select multiple states",
            "timedOut": false,
            "duration": 4000,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "69ea9004-c513-4c32-957b-3836d2de8377",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Select US Outlying Territories : Drop Down with Ensabled values",
            "fullTitle": "Sample demo jquery select Select US Outlying Territories : Drop Down with Ensabled values",
            "timedOut": false,
            "duration": 968,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "49142d50-cd7e-446d-ae10-17dcb2c9de5f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Select US Outlying Territories : Drop Down with disabled values",
            "fullTitle": "Sample demo jquery select Select US Outlying Territories : Drop Down with disabled values",
            "timedOut": false,
            "duration": 1155,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "6091e19a-a0b8-4328-9dff-d379dc39d744",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "f31b3607-d395-417d-96eb-6f5758216b58",
          "efdb079e-59a0-4be3-92b2-96486fe8f649",
          "0f868f8c-6911-4cc6-8450-56525d11010d",
          "69ea9004-c513-4c32-957b-3836d2de8377",
          "49142d50-cd7e-446d-ae10-17dcb2c9de5f",
          "6091e19a-a0b8-4328-9dff-d379dc39d744"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 17781,
        "root": false,
        "rootEmpty": false,
        "_timeout": 100000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 100000
  },
  "copyrightYear": 2019
}