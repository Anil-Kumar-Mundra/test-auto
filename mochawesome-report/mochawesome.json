{
  "stats": {
    "suites": 3,
    "tests": 6,
    "passes": 5,
    "pending": 0,
    "failures": 1,
    "start": "2019-02-19T13:24:44.930Z",
    "end": "2019-02-19T13:24:55.207Z",
    "duration": 10277,
    "testsRegistered": 6,
    "passPercent": 83.3,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "d0e5edbc-c743-494e-8f29-92b44715d947",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "423c6166-653e-4bae-ac1d-bff15eec3f4e",
        "title": "Mocha is a test framework and chai is the assertion library",
        "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
        "file": "\\src\\test\\main-test-engine.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook: Launching the home page",
            "fullTitle": "Mocha is a test framework and chai is the assertion library \"before all\" hook: Launching the home page",
            "timedOut": false,
            "duration": 7858,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "ec9972e3-3130-48da-8c15-ff875a5e86d0",
            "isHook": true,
            "skipped": false
          },
          {
            "title": "\"before all\" hook: Verifying the homepage title",
            "fullTitle": "Mocha is a test framework and chai is the assertion library \"before all\" hook: Verifying the homepage title",
            "timedOut": false,
            "duration": 16,
            "pass": false,
            "fail": false,
            "pending": false,
            "context": "\"simple string\"",
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "f1e08ffc-d63f-4fe6-95c0-9dacf7e1e8aa",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after each\" hook",
            "fullTitle": "Mocha is a test framework and chai is the assertion library \"after each\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "console.log(\"after all tests\");",
            "err": {},
            "isRoot": false,
            "uuid": "efe26793-50ca-4a97-a9ca-16ea4f53a680",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [],
        "suites": [
          {
            "uuid": "7c3f269e-89b7-47df-9c9a-54ef77138f81",
            "title": "Test Suite Two",
            "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
            "file": "\\src\\test\\main-test-engine.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Navigating to the Sample DemoPage",
                "fullTitle": "Mocha is a test framework and chai is the assertion library Test Suite Two Navigating to the Sample DemoPage",
                "timedOut": false,
                "duration": 1112,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "ebfe9ef7-b71e-4dcb-8be4-109454997dec",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Enter the text in enter-message field and verify the message",
                "fullTitle": "Mocha is a test framework and chai is the assertion library Test Suite Two Enter the text in enter-message field and verify the message",
                "timedOut": false,
                "duration": 283,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "14a7f2b1-67bb-403a-b74d-81062ee51d5c",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Enter the two numbers to get the toatl and verify",
                "fullTitle": "Mocha is a test framework and chai is the assertion library Test Suite Two Enter the two numbers to get the toatl and verify",
                "timedOut": false,
                "duration": 252,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "d91b3e75-cf0b-4968-a9f1-295e04a9fa93",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "ebfe9ef7-b71e-4dcb-8be4-109454997dec",
              "14a7f2b1-67bb-403a-b74d-81062ee51d5c",
              "d91b3e75-cf0b-4968-a9f1-295e04a9fa93"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1647,
            "root": false,
            "rootEmpty": false,
            "_timeout": 100000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 100000
      },
      {
        "uuid": "04833ea8-c4ec-4025-9369-c1be0d9c7b36",
        "title": "Test Suite One",
        "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
        "file": "\\src\\test\\main-test-engine.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Navigating to checkboc demo Page",
            "fullTitle": "Test Suite One Navigating to checkboc demo Page",
            "timedOut": false,
            "duration": 584,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "13f5dfcb-feca-4b74-ab1b-7d71ee50a6e3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "click on the check box and verify the message",
            "fullTitle": "Test Suite One click on the check box and verify the message",
            "timedOut": false,
            "duration": 99,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "997d4609-0f83-4830-9f43-7e5d3ae04555",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "click on the multiple checkboxes and verify the message",
            "fullTitle": "Test Suite One click on the multiple checkboxes and verify the message",
            "timedOut": false,
            "duration": 3,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {
              "message": "AssertionError: Success - Check box is checked: expected undefined to be true",
              "estack": "AssertionError: Success - Check box is checked: expected undefined to be true\n    at _callee3$ (D:/newJSTestAutomation/testAuomationWithJS/src/test/module-one/checkbox-demo-test.js:26:11)\n    at tryCatch (node_modules\\babel-polyfill\\node_modules\\regenerator-runtime\\runtime.js:65:40)\n    at Generator.invoke [as _invoke] (node_modules\\babel-polyfill\\node_modules\\regenerator-runtime\\runtime.js:303:22)\n    at Generator.prototype.(anonymous function) [as next] (node_modules\\babel-polyfill\\node_modules\\regenerator-runtime\\runtime.js:117:21)\n    at step (src\\test\\module-one\\checkbox-demo-test.js:11:191)\n    at D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\module-one\\checkbox-demo-test.js:11:361\n    at <anonymous>"
            },
            "isRoot": false,
            "uuid": "5e9e8bee-1c06-4df4-a5c3-708821b87a60",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "13f5dfcb-feca-4b74-ab1b-7d71ee50a6e3",
          "997d4609-0f83-4830-9f43-7e5d3ae04555"
        ],
        "failures": [
          "5e9e8bee-1c06-4df4-a5c3-708821b87a60"
        ],
        "pending": [],
        "skipped": [],
        "duration": 686,
        "root": false,
        "rootEmpty": false,
        "_timeout": 100000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 100000
  },
  "copyrightYear": 2019
}