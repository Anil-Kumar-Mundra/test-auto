{
  "stats": {
    "suites": 3,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2019-02-21T07:00:36.158Z",
    "end": "2019-02-21T07:00:42.595Z",
    "duration": 6437,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "2b6d62f3-c630-4351-9460-4a4362e8b01d",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "e1cb31e4-42a5-4d45-be9c-d4716a6c6daa",
        "title": "Mocha is a test framework and chai is the assertion library",
        "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
        "file": "\\src\\test\\main-test-engine.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook: Launching the home page",
            "fullTitle": "Mocha is a test framework and chai is the assertion library \"before all\" hook: Launching the home page",
            "timedOut": false,
            "duration": 5081,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "20e647e3-be66-4831-b58a-ed4da3361fa5",
            "isHook": true,
            "skipped": false
          },
          {
            "title": "\"before all\" hook: Verifying the homepage title",
            "fullTitle": "Mocha is a test framework and chai is the assertion library \"before all\" hook: Verifying the homepage title",
            "timedOut": false,
            "duration": 8,
            "pass": false,
            "fail": false,
            "pending": false,
            "context": "\"simple string\"",
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "d62a4746-d944-437b-8b31-1d99a495d5f5",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after each\" hook",
            "fullTitle": "Mocha is a test framework and chai is the assertion library \"after each\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "console.log(\"after all tests\");",
            "err": {},
            "isRoot": false,
            "uuid": "4a5fcd64-6127-4edf-9022-fc0036b43b8a",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [],
        "suites": [
          {
            "uuid": "96df2370-68df-4944-80cd-91afd1cba893",
            "title": "Test Suite Two",
            "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
            "file": "\\src\\test\\main-test-engine.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Navigating to the Sample DemoPage",
                "fullTitle": "Mocha is a test framework and chai is the assertion library Test Suite Two Navigating to the Sample DemoPage",
                "timedOut": false,
                "duration": 341,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "1fca2578-4999-4556-baab-467a32815fbd",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Enter the text in enter-message field and verify the message",
                "fullTitle": "Mocha is a test framework and chai is the assertion library Test Suite Two Enter the text in enter-message field and verify the message",
                "timedOut": false,
                "duration": 173,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "5ee87da7-bf01-4cbb-b943-2e1ce4a4993e",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Enter the two numbers to get the toatl and verify",
                "fullTitle": "Mocha is a test framework and chai is the assertion library Test Suite Two Enter the two numbers to get the toatl and verify",
                "timedOut": false,
                "duration": 188,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "84c119c3-57c3-4af5-801e-2e5a8317724c",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "1fca2578-4999-4556-baab-467a32815fbd",
              "5ee87da7-bf01-4cbb-b943-2e1ce4a4993e",
              "84c119c3-57c3-4af5-801e-2e5a8317724c"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 702,
            "root": false,
            "rootEmpty": false,
            "_timeout": 100000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 100000
      },
      {
        "uuid": "24e26d00-f011-4e33-a32e-4b35d197af61",
        "title": "Test Suite One",
        "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
        "file": "\\src\\test\\main-test-engine.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Navigating to checkboc demo Page",
            "fullTitle": "Test Suite One Navigating to checkboc demo Page",
            "timedOut": false,
            "duration": 289,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "76599479-353a-41d6-94b9-f88f59d33f83",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "click on the check box and verify the message",
            "fullTitle": "Test Suite One click on the check box and verify the message",
            "timedOut": false,
            "duration": 93,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "4135753e-baaf-4a2b-95b6-a14ccf5ee414",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "click on the checkall button and verify all the checkboxes are selected",
            "fullTitle": "Test Suite One click on the checkall button and verify all the checkboxes are selected",
            "timedOut": false,
            "duration": 144,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "46d2d84b-ea33-4787-bcee-3d47fcfcb41f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "click on the uncheckall button and verify all the checkboxes are unselected",
            "fullTitle": "Test Suite One click on the uncheckall button and verify all the checkboxes are unselected",
            "timedOut": false,
            "duration": 94,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "9c5cd1de-722d-4156-be0c-e8aa0381e95a",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "76599479-353a-41d6-94b9-f88f59d33f83",
          "4135753e-baaf-4a2b-95b6-a14ccf5ee414",
          "46d2d84b-ea33-4787-bcee-3d47fcfcb41f",
          "9c5cd1de-722d-4156-be0c-e8aa0381e95a"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 620,
        "root": false,
        "rootEmpty": false,
        "_timeout": 100000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 100000
  },
  "copyrightYear": 2019
}