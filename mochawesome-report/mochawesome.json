{
  "stats": {
    "suites": 8,
    "tests": 39,
    "passes": 38,
    "pending": 0,
    "failures": 1,
    "start": "2019-03-13T14:47:53.859Z",
    "end": "2019-03-13T14:48:35.765Z",
    "duration": 41906,
    "testsRegistered": 39,
    "passPercent": 97.4,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "b3ba1763-76ed-4e0d-9bc9-dceddd05f9a0",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "07781e17-c124-459f-8410-b2f7bb791fe3",
        "title": "Mocha is a test framework and chai is the assertion library",
        "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
        "file": "\\src\\test\\main-test-engine.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook: Launching the home page",
            "fullTitle": "Mocha is a test framework and chai is the assertion library \"before all\" hook: Launching the home page",
            "timedOut": false,
            "duration": 5274,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "802d492c-9db6-4f80-aa73-139bd0358d35",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "Verifying the homepage title",
            "fullTitle": "Mocha is a test framework and chai is the assertion library Verifying the homepage title",
            "timedOut": false,
            "duration": 11,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "ea171db0-2335-45be-90d2-763931826e8c",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [
          {
            "uuid": "64f3da17-0355-46c4-a8de-76cee7d37f9d",
            "title": "sample-demo-test",
            "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
            "file": "\\src\\test\\main-test-engine.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Navigating to the Sample DemoPage",
                "fullTitle": "Mocha is a test framework and chai is the assertion library sample-demo-test Navigating to the Sample DemoPage",
                "timedOut": false,
                "duration": 457,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "446cc88d-79ea-4cfa-b100-2b4412070653",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Enter your message",
                "fullTitle": "Mocha is a test framework and chai is the assertion library sample-demo-test Enter your message",
                "timedOut": false,
                "duration": 167,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "b5385795-1c05-45e5-8a8f-037631bfb8da",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Click on Show Message button to display message entered in input field",
                "fullTitle": "Mocha is a test framework and chai is the assertion library sample-demo-test Click on Show Message button to display message entered in input field",
                "timedOut": false,
                "duration": 91,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "75048950-b14c-4844-8b23-f476fbe0dae4",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Message Verification",
                "fullTitle": "Mocha is a test framework and chai is the assertion library sample-demo-test Message Verification",
                "timedOut": false,
                "duration": 34,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "5f8249fc-1614-4185-8a82-15a625b83dbc",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Enter Value for a and b",
                "fullTitle": "Mocha is a test framework and chai is the assertion library sample-demo-test Enter Value for a and b",
                "timedOut": false,
                "duration": 159,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "8bbe1e6d-c9b4-4979-bd7b-5ddd4dc5a706",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Click on Show Message button to display message entered in input field",
                "fullTitle": "Mocha is a test framework and chai is the assertion library sample-demo-test Click on Show Message button to display message entered in input field",
                "timedOut": false,
                "duration": 64,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "2afc1b7d-dbef-42a4-afba-150b5f19e986",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Message Verification",
                "fullTitle": "Mocha is a test framework and chai is the assertion library sample-demo-test Message Verification",
                "timedOut": false,
                "duration": 34,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "51319623-f822-42b1-86b4-adac8765466a",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "446cc88d-79ea-4cfa-b100-2b4412070653",
              "b5385795-1c05-45e5-8a8f-037631bfb8da",
              "75048950-b14c-4844-8b23-f476fbe0dae4",
              "5f8249fc-1614-4185-8a82-15a625b83dbc",
              "8bbe1e6d-c9b4-4979-bd7b-5ddd4dc5a706",
              "2afc1b7d-dbef-42a4-afba-150b5f19e986",
              "51319623-f822-42b1-86b4-adac8765466a"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1006,
            "root": false,
            "rootEmpty": false,
            "_timeout": 100000
          },
          {
            "uuid": "017426a0-c519-47c8-9c98-6fca859612ec",
            "title": "checkbox-demo-test",
            "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
            "file": "\\src\\test\\main-test-engine.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Navigating to checkbox demo Page",
                "fullTitle": "Mocha is a test framework and chai is the assertion library checkbox-demo-test Navigating to checkbox demo Page",
                "timedOut": false,
                "duration": 359,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "d7e319ab-8d24-4ffc-8215-a03b9de8a440",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Clicking on the checkbox will display a success message",
                "fullTitle": "Mocha is a test framework and chai is the assertion library checkbox-demo-test Clicking on the checkbox will display a success message",
                "timedOut": false,
                "duration": 71,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "7d825c1f-5057-4149-993d-78faff454660",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "click on the checkall button and verify all the checkboxes are selected",
                "fullTitle": "Mocha is a test framework and chai is the assertion library checkbox-demo-test click on the checkall button and verify all the checkboxes are selected",
                "timedOut": false,
                "duration": 44,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "fbdd23ab-2347-42d8-a6fb-9627a91cc00c",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Click on 'Check All' to check all checkboxes at once",
                "fullTitle": "Mocha is a test framework and chai is the assertion library checkbox-demo-test Click on 'Check All' to check all checkboxes at once",
                "timedOut": false,
                "duration": 54,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "3a1e1adc-f0c8-4718-a1f8-b28f1dcc937a",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "When you check all the checkboxes, button will change to Uncheck All",
                "fullTitle": "Mocha is a test framework and chai is the assertion library checkbox-demo-test When you check all the checkboxes, button will change to Uncheck All",
                "timedOut": false,
                "duration": 136,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "1b4c3743-ac3b-4d08-8fc9-7e10102a00a7",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Click on uncheck all to check all checkboxes at once",
                "fullTitle": "Mocha is a test framework and chai is the assertion library checkbox-demo-test Click on uncheck all to check all checkboxes at once",
                "timedOut": false,
                "duration": 40,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "443086d6-4082-48cf-9701-240987f299f2",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "When you check all the checkboxes, button will change to check All",
                "fullTitle": "Mocha is a test framework and chai is the assertion library checkbox-demo-test When you check all the checkboxes, button will change to check All",
                "timedOut": false,
                "duration": 77,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "353868c2-3321-4be5-b514-920ba2c4d907",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "d7e319ab-8d24-4ffc-8215-a03b9de8a440",
              "7d825c1f-5057-4149-993d-78faff454660",
              "fbdd23ab-2347-42d8-a6fb-9627a91cc00c",
              "3a1e1adc-f0c8-4718-a1f8-b28f1dcc937a",
              "1b4c3743-ac3b-4d08-8fc9-7e10102a00a7",
              "443086d6-4082-48cf-9701-240987f299f2",
              "353868c2-3321-4be5-b514-920ba2c4d907"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 781,
            "root": false,
            "rootEmpty": false,
            "_timeout": 100000
          },
          {
            "uuid": "82223574-ed26-4af0-8f68-ba5b1fa00765",
            "title": "radiobutton-demo-test",
            "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
            "file": "\\src\\test\\main-test-engine.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Navigating to radio button demo Page",
                "fullTitle": "Mocha is a test framework and chai is the assertion library radiobutton-demo-test Navigating to radio button demo Page",
                "timedOut": false,
                "duration": 309,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "3c45856e-e85c-4384-ae01-f53d176a429c",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Select gender as Male and Click on button to get the selected value and verify it",
                "fullTitle": "Mocha is a test framework and chai is the assertion library radiobutton-demo-test Select gender as Male and Click on button to get the selected value and verify it",
                "timedOut": false,
                "duration": 149,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "bba12cb5-55dc-46ae-9d1f-9ca761694652",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Select gender as Female and Click on button to get the selected value and verify it",
                "fullTitle": "Mocha is a test framework and chai is the assertion library radiobutton-demo-test Select gender as Female and Click on button to get the selected value and verify it",
                "timedOut": false,
                "duration": 109,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "89e05dff-3ea7-4a6f-a852-bea9603f0c84",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Click on button to get the selected values from gender(M) and Age group(0 to 5)",
                "fullTitle": "Mocha is a test framework and chai is the assertion library radiobutton-demo-test Click on button to get the selected values from gender(M) and Age group(0 to 5)",
                "timedOut": false,
                "duration": 230,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "25165a9d-1893-4f0e-8959-7a76f3d11b8b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Click on button to get the selected values from gender(M) and Age group(5 to 15)",
                "fullTitle": "Mocha is a test framework and chai is the assertion library radiobutton-demo-test Click on button to get the selected values from gender(M) and Age group(5 to 15)",
                "timedOut": false,
                "duration": 189,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "1c9e7345-2a9f-4909-aa5c-3fd1042367b8",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Click on button to get the selected values from gender(M) and Age group(15 to 50)",
                "fullTitle": "Mocha is a test framework and chai is the assertion library radiobutton-demo-test Click on button to get the selected values from gender(M) and Age group(15 to 50)",
                "timedOut": false,
                "duration": 205,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "dc856f66-86a1-4e2f-b4f4-15763f89eff5",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Click on button to get the selected values from gender(F) and Age group(0 to 5)",
                "fullTitle": "Mocha is a test framework and chai is the assertion library radiobutton-demo-test Click on button to get the selected values from gender(F) and Age group(0 to 5)",
                "timedOut": false,
                "duration": 182,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "4e97164c-033d-45c3-aff8-e93ef85b5cad",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Click on button to get the selected values from gender(F) and Age group(5 to 15)",
                "fullTitle": "Mocha is a test framework and chai is the assertion library radiobutton-demo-test Click on button to get the selected values from gender(F) and Age group(5 to 15)",
                "timedOut": false,
                "duration": 170,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "93c04b6c-46ec-438d-9bfb-1094997ec7e2",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Click on button to get the selected values from gender(F) and Age group(15 to 50)",
                "fullTitle": "Mocha is a test framework and chai is the assertion library radiobutton-demo-test Click on button to get the selected values from gender(F) and Age group(15 to 50)",
                "timedOut": false,
                "duration": 160,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "63b0dc63-96ad-402d-8ec1-cc140d8ac423",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "3c45856e-e85c-4384-ae01-f53d176a429c",
              "bba12cb5-55dc-46ae-9d1f-9ca761694652",
              "89e05dff-3ea7-4a6f-a852-bea9603f0c84",
              "25165a9d-1893-4f0e-8959-7a76f3d11b8b",
              "1c9e7345-2a9f-4909-aa5c-3fd1042367b8",
              "dc856f66-86a1-4e2f-b4f4-15763f89eff5",
              "4e97164c-033d-45c3-aff8-e93ef85b5cad",
              "93c04b6c-46ec-438d-9bfb-1094997ec7e2",
              "63b0dc63-96ad-402d-8ec1-cc140d8ac423"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1703,
            "root": false,
            "rootEmpty": false,
            "_timeout": 100000
          },
          {
            "uuid": "4d2eba3f-89d1-44fa-bf9e-7e50d17870be",
            "title": "drop-down-list",
            "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
            "file": "\\src\\test\\main-test-engine.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Navigating to drop-down-list demo Page",
                "fullTitle": "Mocha is a test framework and chai is the assertion library drop-down-list Navigating to drop-down-list demo Page",
                "timedOut": false,
                "duration": 350,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "320a46f5-7bcc-42a5-897b-bd74002b1f36",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Selected value from the list will display below the dropdown",
                "fullTitle": "Mocha is a test framework and chai is the assertion library drop-down-list Selected value from the list will display below the dropdown",
                "timedOut": false,
                "duration": 4807,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "9d10ba24-3ba8-4848-9f9f-e0f34b93808d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "By clicking on the buttons, you can get value from the list which \n    will display just below the buttons",
                "fullTitle": "Mocha is a test framework and chai is the assertion library drop-down-list By clicking on the buttons, you can get value from the list which \n    will display just below the buttons",
                "timedOut": false,
                "duration": 3629,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "76dadc0b-dde4-4905-bea2-00a98e032d4c",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "320a46f5-7bcc-42a5-897b-bd74002b1f36",
              "9d10ba24-3ba8-4848-9f9f-e0f34b93808d",
              "76dadc0b-dde4-4905-bea2-00a98e032d4c"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 8786,
            "root": false,
            "rootEmpty": false,
            "_timeout": 100000
          },
          {
            "uuid": "8813579f-5aa9-42b3-aad8-27907efa6b76",
            "title": "input-form-submit",
            "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
            "file": "\\src\\test\\main-test-engine.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Navigating to inout form submit page",
                "fullTitle": "Mocha is a test framework and chai is the assertion library input-form-submit Navigating to inout form submit page",
                "timedOut": false,
                "duration": 372,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "6de310bf-fb61-4d9a-b7cd-a8df57c5d023",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Input form with validations",
                "fullTitle": "Mocha is a test framework and chai is the assertion library input-form-submit Input form with validations",
                "timedOut": false,
                "duration": 2630,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {
                  "message": "Error: Form has not been submitted completely",
                  "estack": "Error: Form has not been submitted completely\n    at _callee2$ (D:/newJSTestAutomation/testAuomationWithJS/src/test/module-one/input-form-submit.js:49:11)\n    at tryCatch (node_modules\\babel-polyfill\\node_modules\\regenerator-runtime\\runtime.js:65:40)\n    at Generator.invoke [as _invoke] (node_modules\\babel-polyfill\\node_modules\\regenerator-runtime\\runtime.js:303:22)\n    at Generator.prototype.(anonymous function) [as next] (node_modules\\babel-polyfill\\node_modules\\regenerator-runtime\\runtime.js:117:21)\n    at step (src\\test\\module-one\\input-form-submit.js:13:191)\n    at D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\module-one\\input-form-submit.js:13:361\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)"
                },
                "isRoot": false,
                "uuid": "8826f42a-9411-4946-a8c2-acd726937097",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "6de310bf-fb61-4d9a-b7cd-a8df57c5d023"
            ],
            "failures": [
              "8826f42a-9411-4946-a8c2-acd726937097"
            ],
            "pending": [],
            "skipped": [],
            "duration": 3002,
            "root": false,
            "rootEmpty": false,
            "_timeout": 100000
          },
          {
            "uuid": "9096e43e-49e4-4bcc-803a-4a2b93a3ba36",
            "title": "ajax-form-submit",
            "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
            "file": "\\src\\test\\main-test-engine.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Navigating to drop-down-list demo Page",
                "fullTitle": "Mocha is a test framework and chai is the assertion library ajax-form-submit Navigating to drop-down-list demo Page",
                "timedOut": false,
                "duration": 318,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "5f78faa4-0b74-4d6c-b473-afaa3548d9a7",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Ajax Form Submit with Loading icon enter name, description and Submit",
                "fullTitle": "Mocha is a test framework and chai is the assertion library ajax-form-submit Ajax Form Submit with Loading icon enter name, description and Submit",
                "timedOut": false,
                "duration": 350,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "696e1ea9-9447-4b30-8971-92d7efae39f4",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Loading icon will be shown as progress about the server side execution",
                "fullTitle": "Mocha is a test framework and chai is the assertion library ajax-form-submit Loading icon will be shown as progress about the server side execution",
                "timedOut": false,
                "duration": 1024,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "b459db34-4323-47c1-8fe4-206de6594b29",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "On processing, the submit button will be hidden to prevent duplicate submits.",
                "fullTitle": "Mocha is a test framework and chai is the assertion library ajax-form-submit On processing, the submit button will be hidden to prevent duplicate submits.",
                "timedOut": false,
                "duration": 1015,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "8916ff01-d3ef-4beb-849d-6c2083a03d22",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "5f78faa4-0b74-4d6c-b473-afaa3548d9a7",
              "696e1ea9-9447-4b30-8971-92d7efae39f4",
              "b459db34-4323-47c1-8fe4-206de6594b29",
              "8916ff01-d3ef-4beb-849d-6c2083a03d22"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2707,
            "root": false,
            "rootEmpty": false,
            "_timeout": 100000
          },
          {
            "uuid": "22f9ad42-0bde-4efe-9ce7-a22e173260c1",
            "title": "jquery-select-dropdown",
            "fullFile": "D:\\newJSTestAutomation\\testAuomationWithJS\\src\\test\\main-test-engine.js",
            "file": "\\src\\test\\main-test-engine.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Navigating to drop-down-list demo Page",
                "fullTitle": "Mocha is a test framework and chai is the assertion library jquery-select-dropdown Navigating to drop-down-list demo Page",
                "timedOut": false,
                "duration": 991,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "d5cb7746-b25c-4280-9427-6c1faa4423b9",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Drop Down with Search box",
                "fullTitle": "Mocha is a test framework and chai is the assertion library jquery-select-dropdown Drop Down with Search box",
                "timedOut": false,
                "duration": 2667,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "8e5eb3a9-d3d4-4e58-bb4e-33ad2e886fe9",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Multi Select - Search and Select multiple states",
                "fullTitle": "Mocha is a test framework and chai is the assertion library jquery-select-dropdown Multi Select - Search and Select multiple states",
                "timedOut": false,
                "duration": 8253,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "85f55bbf-dd20-41f8-982e-8cff740e869b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Multi UnSelect - Search and Select multiple states",
                "fullTitle": "Mocha is a test framework and chai is the assertion library jquery-select-dropdown Multi UnSelect - Search and Select multiple states",
                "timedOut": false,
                "duration": 4382,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "65a8d938-47f1-4c9b-a713-02aa1594ca9f",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Select US Outlying Territories : Drop Down with Ensabled values",
                "fullTitle": "Mocha is a test framework and chai is the assertion library jquery-select-dropdown Select US Outlying Territories : Drop Down with Ensabled values",
                "timedOut": false,
                "duration": 1104,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "33fbf831-2d2f-4afe-85b4-c2e8f671233a",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Select US Outlying Territories : Drop Down with disabled values",
                "fullTitle": "Mocha is a test framework and chai is the assertion library jquery-select-dropdown Select US Outlying Territories : Drop Down with disabled values",
                "timedOut": false,
                "duration": 1150,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
                "err": {},
                "isRoot": false,
                "uuid": "1d28b8f3-6191-41e2-a5a2-fb03ec257b0b",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "d5cb7746-b25c-4280-9427-6c1faa4423b9",
              "8e5eb3a9-d3d4-4e58-bb4e-33ad2e886fe9",
              "85f55bbf-dd20-41f8-982e-8cff740e869b",
              "65a8d938-47f1-4c9b-a713-02aa1594ca9f",
              "33fbf831-2d2f-4afe-85b4-c2e8f671233a",
              "1d28b8f3-6191-41e2-a5a2-fb03ec257b0b"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 18547,
            "root": false,
            "rootEmpty": false,
            "_timeout": 100000
          }
        ],
        "passes": [
          "ea171db0-2335-45be-90d2-763931826e8c"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 11,
        "root": false,
        "rootEmpty": false,
        "_timeout": 100000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 100000
  },
  "copyrightYear": 2019
}